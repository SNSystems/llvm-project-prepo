name: Commit Tests

env:
  release_major: 9

on:
  push:

jobs:
  build_llvm:
    name: check-all llvm/clang/pstore
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    steps:
    - name: Setup Windows
      if: startsWith(matrix.os, 'windows')
      uses: llvm/actions/setup-windows@master
      with:
        arch: amd64
    - name: Install Ninja
      uses: llvm/actions/install-ninja@master
    - name: Checkout LLVM
      uses: actions/checkout@v2
    - name: Checkout pstore
      uses: actions/checkout@v2
      with:
        repository: SNSystems/pstore
        path: pstore
    - name: Test LLVM Linux
      if: startsWith(matrix.os, 'ubuntu')
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja -DLLVM_ENABLE_PROJECTS="clang;pstore" -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD=OFF -DLLVM_USE_LINKER=gold -DLLVM_PARALLEL_LINK_JOBS=1
    - name: Test LLVM Windows
      if: startsWith(matrix.os, 'windows')
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja -DLLVM_ENABLE_PROJECTS="clang;pstore" -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD=OFF
    - name: Test LLVM MacOS
      if: startsWith(matrix.os, 'macOS')
      uses: llvm/actions/build-test-llvm-project@master
      with:
        cmake_args: -G Ninja -DLLVM_ENABLE_PROJECTS="clang;pstore" -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD=OFF
